#!/bin/bash

edit() {
    case $1 in
        scripts )
            nano ./project
            ;;

        * )
            nano ./HOOBS.code-workspace
            ;;
    esac
}

clone() {
    printf "\033[0;36mCloning $1\033[0m\n"

    case $1 in
        console )
            [[ -d console ]] || git clone https://github.com/hoobs-org/helm.git
            [[ -d console ]] || mv helm console
            (cd console && git checkout blackwing)
            ;;

        repo | security )
            [[ -d $1 ]] || git clone https://github.com/hoobs-org/$1.git
            ;;

        * )
            [[ -d $1 ]] || git clone https://github.com/hoobs-org/$1.git
            (cd $1 && git checkout blackwing)
            ;;
    esac
}

install() {
    printf "\033[0;36mInstalling $1\033[0m\n"

    (cd $1 && ../node_modules/.bin/yarn install)
}

push() {
    printf "\033[0;36mPushing $1\033[0m\n"

    (cd $1 && git push)
}

pull() {
    printf "\033[0;36mPulling $1\033[0m\n"

    (cd $1 && git pull && git checkout blackwing)
}

yarn() {
    COMMAND=$1
    PROJECT=$2

    shift
    shift

    case $PROJECT in
        cli | console | desktop | gui | hoobsd | network | pam | portal | sdk )
            case $COMMAND in
                install )
                    printf "\033[0;36mInstall $PROJECT\033[0m\n"

                    (cd $PROJECT && ../node_modules/.bin/yarn install)
                    ;;

                add )
                    printf "\033[0;36mAdd $PROJECT\033[0m\n"

                    (cd $PROJECT && ../node_modules/.bin/yarn add $@)
                    ;;

                remove )
                    printf "\033[0;36mRemove $PROJECT\033[0m\n"

                    (cd $PROJECT && ../node_modules/.bin/yarn remove $@)
                    ;;
            esac
            ;;
    esac
}

version() {
    PROJECT=$1

    shift

    case $PROJECT in
        gui | sdk | portal | console | network | pam | image )
            (cd $PROJECT && ./project version $@)
            ;;
    esac
}

lint() {
    case $1 in
        gui | sdk | portal | console | network )
            printf "\033[0;36mLint $1\033[0m\n"

            (cd $1 && ./project lint)
            ;;
    esac
}

debug() {
    case $1 in
        gui | portal | console )
            printf "\033[0;36mDebug $1\033[0m\n"

            (cd $1 && ./project debug)
            ;;
    esac
}

build() {
    PROJECT=$1

    shift

    case $PROJECT in
        localization )
            printf "\033[0;36mBuild $PROJECT\033[0m\n"

            (cd lang && ./build)
            ;;

        gui | sdk | portal | console | network | pam | image )
            printf "\033[0;36mBuild $1\033[0m\n"

            (cd $PROJECT && ./project build $@)
            ;;
    esac
}

rebuild() {
    case $1 in
        image )
            printf "\033[0;36mRebuild $1\033[0m\n"

            (cd $1 && ./project rebuild)
            ;;
    esac
}

publish() {
    PROJECT=$1

    shift

    case $PROJECT in
        list )
            list $@
            ;;

        gui | sdk | portal | console | network | pam )
            printf "\033[0;36mPublish $PROJECT\033[0m\n"

            (cd $PROJECT && ./project publish $@)
            ;;
    esac
}

list() {
    case $1 in
        stable | edge | bleeding )
            reprepro -b ./repo/debian list $1
            ;;

        * )
            reprepro -b ./repo/debian list stable
            reprepro -b ./repo/debian list edge
            reprepro -b ./repo/debian list bleeding
            ;;
    esac
}

clean() {
    case $1 in
        gui | sdk | portal | console | network | pam | image )
            printf "\033[0;36mClean $1\033[0m\n"

            (cd $1 && ./project clean)
            ;;
    esac 
}

case $1 in
    edit )
        shift
        edit $@
        ;;

    setup )
        npm install

        clone cli
        clone console
        clone desktop
        clone gui
        clone hoobsd
        clone image
        clone network
        clone pam
        clone portal
        clone repo
        clone sdk
        clone security

        install cli
        install console
        install desktop
        install gui
        install hoobsd
        install network
        install pam
        install portal
        install sdk
        ;;

    push )
        git push

        push cli
        push console
        push desktop
        push gui
        push hoobsd
        push image
        push network
        push pam
        push portal
        push repo
        push sdk
        push security
        ;;

    pull )
        git pull
        npm install

        pull cli
        pull console
        pull desktop
        pull gui
        pull hoobsd
        pull image
        pull network
        pull pam
        pull portal
        pull repo
        pull sdk
        pull security

        install cli
        install console
        install desktop
        install gui
        install hoobsd
        install network
        install pam
        install portal
        install sdk
        ;;

    install )
        shift
        yarn install $@
        ;;

    add )
        shift
        yarn add $@
        ;;

    remove )
        shift
        yarn remove $@
        ;;

    cache )
        shift
        ./node_modules/.bin/yarn cache $@
        ;;

    version )
        shift
        version $@
        ;;

    lint )
        shift
        lint $@
        ;;

    debug )
        shift
        debug $@
        ;;

    build )
        shift
        build $@
        ;;

    rebuild )
        shift
        rebuild $@
        ;;

    publish )
        shift
        publish $@
        ;;

    clean )
        shift
        clean $@
        ;;
esac
